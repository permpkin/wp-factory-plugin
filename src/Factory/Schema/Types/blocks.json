{
  "key": "blocks",
  "label": "Blocks",
  "documentation": "https://developer.wordpress.org/block-editor/reference-guides/block-api/block-metadata",
  "files": {
    "source": [
      "{{SRC}}/blocks/{{key}}/"
    ],
    "dist": [
      "{{THEME}}/blocks/{{key}}/"
    ]
  },
  "actions": {
    "Build Block": "/build/blocks/{key}"
  },
  "groups": [
    {
      "label": "Attributes",
      "expandable": true,
      "schema": {
        "key": {
          "label": "ID",
          "description": "(String) A unique name that identifies the block (without namespace). For example 'testimonial'. Note: A block name can only contain lowercase alphanumeric characters and dashes, and must begin with a letter.",
          "type": "id",
          "default": "",
          "placeholder": "my-custom-block"
        },
        "title": {
          "label": "Name",
          "description": "(String) The display name for your block. For example 'Testimonial'.",
          "type": "name",
          "keyRef": "key",
          "default": "",
          "required": true,
          "placeholder": "Custom Block"
        },
        "textdomain": {
          "label": "Text Domain",
          "description": "textdomain/namespace of the block.",
          "type": "text",
          "placeholder": "my-block-namespace",
          "default": "create-block"
        },
        "description": {
          "label": "Block Description",
          "description": "(String) (Optional) This is a short description for your block.",
          "type": "textarea",
          "placeholder": "My descriptive summary...",
          "required": true,
          "default": ""
        },
        "attributes": {
          "label": "Fields",
          "description": "(Object) Block attributes provide information about the data stored by a block. For example, rich content, a list of image URLs, a background colour, or a button title.",
          "type": "keys[]",
          "default": [],
          "allowOther": true,
          "keys": {
            "fieldKey": {
              "label": "Field Key",
              "type": "text",
              "placeholder": "e.g. content",
              "required": true,
              "description": "field key that will be reference in templates.",
              "default": ""
            },
            "type": {
              "label": "Field Type",
              "type": "select",
              "placeholder": "string",
              "required": true,
              "description": "The type indicates the type of data that is stored by the attribute. It does not indicate where the data is stored, which is defined by the source field.",
              "default": "",
              "options": [
                "null",
                "boolean",
                "object",
                "array",
                "string",
                "integer",
                "enum"
              ]
            },
            "enum": {
              "label": "Enum Values",
              "type": "string[]",
              "placeholder": "large, small, tiny",
              "required": true,
              "dependsOn": [
                ["type", "==", "enum"]
              ],
              "description": "An attribute can be defined as one of a fixed set of values. This is specified by an enum, which contains an array of allowed values:",
              "default": ""
            }
          }
        }
      }
    },
    {
      "label": "Properties",
      "expandable": true,
      "schema": {
        "supports": {
          "label": "Supports",
          "description": "(Array) (Optional) An array of features to support. All properties from the JavaScript block supports documentation may be used. The following options are supported:",
          "placeholder": "anchor, align",
          "type": "string[]",
          "default": "",
          "autocomplete": [
            "anchor",
            "alignWide",
            "align",
            "className",
            "customClassName",
            "color",
            "colorBackground",
            "colorGradients",
            "colorLink",
            "colorText",
            "defaultStylePicker",
            "html",
            "inserter",
            "multiple",
            "reusable",
            "lock",
            "spacingMargin",
            "spacingPadding",
            "typography",
            "typographyFontSize",
            "typographyLineHeight"
          ]
        },
        "version": {
          "label": "Version",
          "description": "(string|bool|null) (Optional) String specifying block version number.",
          "type": "text",
          "placeholder": "1.0.0",
          "default": ""
        },
        "keywords": {
          "label": "Keywords",
          "description": "(Array) (Optional) An array of search terms to help user discover the block while searching.",
          "type": "string[]",
          "default": "",
          "placeholder": "banner, form"
        },
        "category": {
          "label": "Category",
          "description": "(String) Blocks are grouped into categories to help users browse and discover them. The core provided categories are [ common | formatting | layout | widgets | embed ]. Plugins and Themes can also register custom block categories.",
          "type": "string[]",
          "placeholder": "my-category",
          "default": "",
          "autocomplete": [
            "common",
            "formatting",
            "layout",
            "widgets",
            "embed"
          ],
          "required": true
        },
        "icon": {
          "label": "Icon",
          "description": "(String|Array) (Optional) An icon property can be specified to make it easier to identify a block. These can be any of WordPressâ€™ Dashicons, or a custom svg element.",
          "type": "select",
          "required": true,
          "default": ""
        },
        "usesContext": {
          "label": "Consuming Block Context",
          "description": "(Array) (Optional) A block can inherit a context value from an ancestor provider by assigning a usesContext property in its registered settings. This should be assigned as an array of the context names the block seeks to inherit.",
          "type": "string[]",
          "typeRelation": "block",
          "default": [],
          "placeholder": "my-namespace/parent-block"
        }
      }
    },
    {
      "label": "Appearance",
      "schema": {
        "styles": {
          "label": "Styles/Variations",
          "description": "(Array) (Optional) Adds multiple variations of the current block (first in list becomes default), Applies the given variant as a class to the root dom element.",
          "type": "string[]",
          "default": "",
          "placeholder": "small, big"
        }
      }
    }
  ],
  "table": {
    "columns": [
      {
        "label": "ID/Name",
        "key": "title",
        "type": "key"
      },
      {
        "label": "Description",
        "key": "description",
        "type": "description"
      },
      {
        "label": "Category",
        "key": "category",
        "type": "string[]"
      },
      {
        "label": "Keywords",
        "key": "keywords",
        "type": "string[]"
      }
    ]
  }
}