{
  "key": "types",
  "label": "Post Types",
  "documentation": "https://developer.wordpress.org/reference/functions/register_post_type/",
  "groups": [
    {
      "label": "Attributes",
      "expandable": true,
      "schema": {
        "key": {
          "label": "ID",
          "description": "(string) (Required) Name of the post type. Should be unique.",
          "type": "id",
          "placeholder": "my-post-type"
        },
        "label": {
          "label": "Name",
          "description": "(string) Name of the post type shown in the menu. Usually plural. Default is value of $labels['name'].",
          "type": "name",
          "keyRef": "key",
          "required": true,
          "default": "",
          "placeholder": "My Post Type",
          "invalidValues": [
            "post",
            "page",
            "attachment",
            "revision",
            "nav_menu_item",
            "custom_css",
            "customize_changeset",
            "oembed_cache",
            "user_request",
            "wp_block",
            "action",
            "author",
            "order",
            "theme"
          ]
        },
        "description": {
          "label": "Description",
          "description": "(string) A short descriptive summary of what the post type is.",
          "type": "textarea",
          "placeholder": "My descriptive summary...",
          "default": ""
        }
      }
    },
    {
      "label": "Labels",
      "expandable": true,
      "schema": {
        "labels": {
          "label": "Labels",
          "description": "(array) An array of labels for this post type. If not set, post labels are inherited for non-hierarchical types and page labels for hierarchical ones. See get_post_type_labels() for a full list of supported labels.",
          "type": "keys",
          "allowOther": true,
          "keys": {
            "name": {
              "type": "text",
              "placeholder": "Post Types"
            },
            "singular_name": {
              "type": "text",
              "placeholder": "Post Type"
            },
            "menu_name": {
              "type": "text",
              "placeholder": "Post Types"
            },
            "name_admin_bar": {
              "type": "text",
              "placeholder": "Post Type"
            },
            "archives": {
              "type": "text",
              "placeholder": "Item Archives"
            },
            "attributes": {
              "type": "text",
              "placeholder": "Item Attributes"
            },
            "parent_item_colon": {
              "type": "text",
              "placeholder": "Parent Item:"
            },
            "all_items": {
              "type": "text",
              "placeholder": "All Items"
            },
            "add_new_item": {
              "type": "text",
              "placeholder": "Add New Item"
            },
            "add_new": {
              "type": "text",
              "placeholder": "Add New"
            },
            "new_item": {
              "type": "text",
              "placeholder": "New Item"
            },
            "edit_item": {
              "type": "text",
              "placeholder": "Edit Item"
            },
            "update_item": {
              "type": "text",
              "placeholder": "Update Item"
            },
            "view_item": {
              "type": "text",
              "placeholder": "View Item"
            },
            "view_items": {
              "type": "text",
              "placeholder": "View Items"
            },
            "search_items": {
              "type": "text",
              "placeholder": "Search Item"
            },
            "not_found": {
              "type": "text",
              "placeholder": "Not found"
            },
            "not_found_in_trash": {
              "type": "text",
              "placeholder": "Not found in Trash"
            },
            "featured_image": {
              "type": "text",
              "placeholder": "Featured Image"
            },
            "set_featured_image": {
              "type": "text",
              "placeholder": "Set featured image"
            },
            "remove_featured_image": {
              "type": "text",
              "placeholder": "Remove featured image"
            },
            "use_featured_image": {
              "type": "text",
              "placeholder": "Use as featured image"
            },
            "insert_into_item": {
              "type": "text",
              "placeholder": "Insert into item"
            },
            "uploaded_to_this_item": {
              "type": "text",
              "placeholder": "Uploaded to this item"
            },
            "items_list": {
              "type": "text",
              "placeholder": "Items list"
            },
            "items_list_navigation": {
              "type": "text",
              "placeholder": "Items list navigation"
            },
            "filter_items_list": {
              "type": "text",
              "placeholder": "Filter items list"
            }
          }
        }
      }
    },
    {
      "label": "Access/Visibility",
      "expandable": true,
      "schema": {
        "menu_icon": {
          "label": "Menu Icon",
          "description": "(string) The url to the icon to be used for this menu. Pass a base64-encoded SVG using a data URI, which will be colored to match the color scheme -- this should begin with 'data:image/svg+xml;base64,'. Pass the name of a Dashicons helper class to use a font icon, e.g. 'dashicons-chart-pie'. Pass 'none' to leave div.wp-menu-image empty so an icon can be added via CSS. Defaults to use the posts icon.",
          "type": "select",
          "placeholder": "dashicon-*",
          "options": [
            "menu",
            "admin-site",
            "dashboard",
            "admin-media",
            "admin-page",
            "admin-comments",
            "admin-appearance",
            "admin-plugins",
            "admin-users",
            "admin-tools",
            "admin-settings",
            "admin-network",
            "admin-generic",
            "admin-home",
            "admin-collapse",
            "filter",
            "admin-customizer",
            "admin-multisite",
            "admin-links",
            "admin-post",
            "format-image",
            "format-gallery",
            "format-audio",
            "format-video",
            "format-chat",
            "format-status",
            "format-aside",
            "format-quote",
            "welcome-write-blog",
            "welcome-add-page",
            "welcome-view-site",
            "welcome-widgets-menus",
            "welcome-comments",
            "welcome-learn-more",
            "image-crop",
            "image-rotate",
            "image-rotate-left",
            "image-rotate-right",
            "image-flip-vertical",
            "image-flip-horizontal",
            "image-filter",
            "undo",
            "redo",
            "editor-bold",
            "editor-italic",
            "editor-ul",
            "editor-ol",
            "editor-quote",
            "editor-alignleft",
            "editor-aligncenter",
            "editor-alignright",
            "editor-insertmore",
            "editor-spellcheck",
            "editor-expand",
            "editor-contract",
            "editor-kitchensink",
            "editor-underline",
            "editor-justify",
            "editor-textcolor",
            "editor-paste-word",
            "editor-paste-text",
            "editor-removeformatting",
            "editor-video",
            "editor-customchar",
            "editor-outdent",
            "editor-indent",
            "editor-help",
            "editor-strikethrough",
            "editor-unlink",
            "editor-rtl",
            "editor-break",
            "editor-code",
            "editor-code-duplicate",
            "editor-paragraph",
            "editor-table",
            "align-left",
            "align-right",
            "align-center",
            "align-none",
            "lock",
            "lock-duplicate",
            "unlock",
            "calendar",
            "calendar-alt",
            "visibility",
            "hidden",
            "post-status",
            "edit",
            "edit-large",
            "sticky",
            "external",
            "arrow-up",
            "arrow-up-duplicate",
            "arrow-down",
            "arrow-left",
            "arrow-right",
            "arrow-up-alt",
            "arrow-down-alt",
            "arrow-left-alt",
            "arrow-right-alt",
            "arrow-up-alt2",
            "arrow-down-alt2",
            "arrow-left-alt2",
            "arrow-right-alt2",
            "leftright",
            "sort",
            "randomize",
            "list-view",
            "excerpt-view",
            "grid-view",
            "move",
            "hammer",
            "art",
            "migrate",
            "performance",
            "universal-access",
            "universal-access-alt",
            "tickets",
            "nametag",
            "clipboard",
            "heart",
            "megaphone",
            "schedule",
            "wordpress",
            "wordpress-alt",
            "pressthis",
            "update",
            "screenoptions",
            "cart",
            "feedback",
            "translation",
            "tag",
            "category",
            "archive",
            "tagcloud",
            "text",
            "media-archive",
            "media-audio",
            "media-code",
            "media-default",
            "media-document",
            "media-interactive",
            "media-spreadsheet",
            "media-text",
            "media-video",
            "playlist-audio",
            "playlist-video",
            "controls-play",
            "controls-pause",
            "controls-forward",
            "controls-skipforward",
            "controls-back",
            "controls-skipback",
            "controls-repeat",
            "controls-volumeon",
            "controls-volumeoff",
            "yes",
            "no",
            "no-alt",
            "plus",
            "plus-alt",
            "plus-alt2",
            "minus",
            "dismiss",
            "marker",
            "star-filled",
            "star-half",
            "star-empty",
            "flag",
            "info",
            "warning",
            "share",
            "share1",
            "share-alt",
            "share-alt2",
            "twitter",
            "rss",
            "email",
            "email-alt",
            "facebook",
            "facebook-alt",
            "networking",
            "googleplus",
            "location",
            "location-alt",
            "camera",
            "images-alt",
            "images-alt2",
            "video-alt",
            "video-alt2",
            "video-alt3",
            "vault",
            "shield",
            "shield-alt",
            "sos",
            "search",
            "slides",
            "analytics",
            "chart-pie",
            "chart-bar",
            "chart-line",
            "chart-area",
            "groups",
            "businessman",
            "id",
            "id-alt",
            "products",
            "awards",
            "forms",
            "testimonial",
            "portfolio",
            "book",
            "book-alt",
            "download",
            "upload",
            "backup",
            "clock",
            "lightbulb",
            "microphone",
            "desktop",
            "laptop",
            "tablet",
            "smartphone",
            "phone",
            "smiley",
            "index-card",
            "carrot",
            "building",
            "store",
            "album",
            "palmtree",
            "tickets-alt",
            "money",
            "thumbs-up",
            "thumbs-down",
            "layout",
            "paperclip",
            "email-alt2",
            "menu-alt",
            "trash",
            "heading",
            "insert",
            "align-full-width",
            "button",
            "align-wide",
            "ellipsis",
            "buddicons-activity",
            "buddicons-buddypress-logo",
            "buddicons-community",
            "buddicons-forums",
            "buddicons-friends",
            "buddicons-groups",
            "buddicons-pm",
            "buddicons-replies",
            "buddicons-topics",
            "buddicons-tracking",
            "admin-site-alt",
            "admin-site-alt2",
            "admin-site-alt3",
            "rest-api",
            "yes-alt",
            "buddicons-bbpress-logo",
            "tide",
            "editor-ol-rtl",
            "instagram",
            "businessperson",
            "businesswoman",
            "color-picker",
            "camera-alt",
            "editor-ltr",
            "cloud",
            "twitter-alt",
            "menu-alt2",
            "menu-alt3",
            "plugins-checked",
            "text-page",
            "update-alt",
            "code-standards",
            "align-pull-left",
            "align-pull-right",
            "block-default",
            "cloud-saved",
            "cloud-upload",
            "columns",
            "cover-image",
            "embed-audio",
            "embed-generic",
            "embed-photo",
            "embed-post",
            "embed-video",
            "exit",
            "html",
            "info-outline",
            "insert-after",
            "insert-before",
            "remove",
            "shortcode",
            "table-col-after",
            "table-col-before",
            "table-col-delete",
            "table-row-after",
            "table-row-before",
            "table-row-delete",
            "saved",
            "airplane",
            "amazon",
            "bank",
            "beer",
            "bell",
            "calculator",
            "coffee",
            "database-add",
            "database-export",
            "database-import",
            "database-remove",
            "database-view",
            "database",
            "drumstick",
            "edit-page",
            "food",
            "fullscreen-alt",
            "fullscreen-exit-alt",
            "games",
            "google",
            "hourglass",
            "linkedin",
            "money-alt",
            "open-folder",
            "pdf",
            "pets",
            "pinterest",
            "printer",
            "privacy",
            "reddit",
            "spotify",
            "superhero-alt",
            "superhero",
            "twitch",
            "whatsapp",
            "youtube",
            "car",
            "podio",
            "xing"
          ]
        },
        "public": {
          "label": "Public",
          "description": "(bool) Whether a post type is intended for use publicly either via the admin interface or by front-end users. While the default settings of $exclude_from_search, $publicly_queryable, $show_ui, and $show_in_nav_menus are inherited from public, each does not rely on this relationship and controls a very specific intention. Default false.",
          "type": "boolean",
          "default": true
        },
        "hierarchical": {
          "label": "Hierarchical",
          "description": "(bool) Whether the post type is hierarchical (e.g. page). Default false.",
          "type": "boolean",
          "default": false
        },
        "exclude_from_search": {
          "label": "Exclude from search?",
          "description": "(bool) Whether to exclude posts with this post type from front end search results. Default is the opposite value of $public.",
          "type": "boolean",
          "default": false
        },
        "publicly_queryable": {
          "label": "Publicly Queryable",
          "description": "(bool) Whether queries can be performed on the front end for the post type as part of parse_request(). e.g. /index.php?post_type=id",
          "type": "boolean",
          "default": true
        },
        "show_ui": {
          "label": "Show UI",
          "description": "(bool) Whether to generate and allow a UI for managing this post type in the admin. Default is value of $public.",
          "type": "boolean",
          "default": true
        },
        "show_in_menu": {
          "label": "Show in Menu",
          "description": "(bool|string) Where to show the post type in the admin menu. To work, $show_ui must be true. If true, the post type is shown in its own top level menu. If false, no menu is shown. If a string of an existing top level menu (eg. 'tools.php' or 'edit.php?post_type=page'), the post type will be placed as a sub-menu of that. Default is value of $show_ui.",
          "type": "text",
          "default": true
        },
        "show_in_nav_menus": {
          "label": "Show in Nav Menus",
          "description": "(bool) Makes this post type available for selection in navigation menus. Default is value of $public.",
          "type": "boolean",
          "default": true
        },
        "show_in_admin_bar": {
          "label": "Show in Admin Bar",
          "description": "(bool) Makes this post type available via the admin bar. Default is value of $show_in_menu.",
          "type": "boolean",
          "default": true
        },
        "show_in_rest": {
          "label": "Show in REST",
          "description": "(bool) Whether to include the post type in the REST API. Set this to true for the post type to be available in the block editor.",
          "type": "boolean",
          "default": true
        },
        "menu_position": {
          "label": "Menu Position",
          "description": "(int) The position in the menu order the post type should appear. To work, $show_in_menu must be true. Default null (at the bottom).",
          "type": "number",
          "placeholder": "0"
        }
      }
    },
    {
      "label": "Functionality",
      "expandable": true,
      "schema": {
        "rest_base": {
          "label": "REST Base Url",
          "description": "(string) To change the base url of REST API route. Default is $post_type.",
          "type": "text",
          "default": "BASE"
        },
        "rest_controller_class": {
          "label": "REST Controller Class",
          "description": "(string) REST API Controller class name. Default is 'WP_REST_Posts_Controller'.",
          "type": "text",
          "placeholder": "SomeCustomClass"
        },
        "capability_type": {
          "label": "Capability Type",
          "description": "(string) The string to use to build the read, edit, and delete capabilities. May be passed as an array to allow for alternative plurals when using this argument as a base to construct the capabilities, e.g. array('story', 'stories'). Default 'post'.",
          "placeholder": "post",
          "type": "string[]"
        },
        "capabilities": {
          "label": "Capabilities",
          "description": "(array) Array of capabilities for this post type. $capability_type is used as a base to construct capabilities by default. See get_post_type_capabilities().",
          "type": "keys",
          "keys": {
            "edit_post": {
              "type": "text",
              "placeholder": "Post Types"
            },
            "read_post": {
              "type": "text",
              "placeholder": "Read Post"
            },
            "delete_post": {
              "type": "text",
              "placeholder": "Delete Post"
            },
            "edit_posts": {
              "type": "text",
              "placeholder": "Edit Posts"
            },
            "edit_others_posts": {
              "type": "text",
              "placeholder": "Edit Others Posts"
            },
            "publish_posts": {
              "type": "text",
              "placeholder": "Publish Posts"
            },
            "read_private_posts": {
              "type": "text",
              "placeholder": "Read Private Posts"
            }
          }
        },
        "map_meta_cap": {
          "label": "Map Meta Cap",
          "description": "(bool) Whether to use the internal default meta capability handling. Default false.",
          "type": "boolean",
          "default": false
        },
        "supports": {
          "description": "(array) Core feature(s) the post type supports. Serves as an alias for calling add_post_type_support() directly. Core features include 'title', 'editor', 'comments', 'revisions', 'trackbacks', 'author', 'excerpt', 'page-attributes', 'thumbnail', 'custom-fields', and 'post-formats'. Additionally, the 'revisions' feature dictates whether the post type will store revisions, and the 'comments' feature dictates whether the comments count will show on the edit screen. A feature can also be specified as an array of arguments to provide additional information about supporting that feature. Example: array( 'my_feature', array( 'field' => 'value' ) ). Default is an array containing 'title' and 'editor'.",
          "label": "Supports",
          "type": "string[]",
          "placeholder": "title, editor, thumbnail, comments, trackbacks, revisions, custom-fields, page-attributes, post-formats",
          "autocomplete": [
            "title",
            "editor",
            "thumbnail",
            "comments",
            "trackbacks",
            "revisions",
            "custom-fields",
            "page-attributes",
            "post-formats"
          ]
        },
        "register_meta_box_cb": {
          "label": "Register Metabox Callback",
          "description": "(callable) Provide a callback function that sets up the meta boxes for the edit form. Do remove_meta_box() and add_meta_box() calls in the callback. Default to null unless \"POST_NAME.php\" is present in the metabox folder.",
          "type": "text",
          "default": "",
          "placeholder": "my_custom_callback"
        },
        "has_archive": {
          "label": "Has Archive",
          "description": "(bool|string) Whether there should be post type archives, or if a string, the archive slug to use. Will generate the proper rewrite rules if $rewrite is enabled. Default false.",
          "type": "boolean",
          "default": false
        },
        "rewrite": {
          "label": "Rewrite",
          "description": "(bool|array) Triggers the handling of rewrites for this post type. To prevent rewrite, set to false. Defaults to true, using $post_type as slug. To specify rewrite rules, an array can be passed with any of these keys:",
          "type": "keys",
          "keys": {
            "slug": {
              "type": "text",
              "placeholder": "slug"
            },
            "with_front": {
              "type": "boolean",
              "placeholder": "With Front"
            },
            "feeds": {
              "type": "boolean",
              "placeholder": "Enable Feeds"
            },
            "pages": {
              "type": "boolean",
              "placeholder": "Enable Pages"
            },
            "ep_mask": {
              "type": "text",
              "placeholder": "EP_PERMALINK"
            }
          }
        },
        "can_export": {
          "label": "Can Export",
          "description": "(bool) Whether to allow this post type to be exported. Default true.",
          "type": "boolean",
          "default": true
        },
        "delete_with_user": {
          "label": "Delete with User",
          "description": "(bool) Whether to delete posts of this type when deleting a user. If true, posts of this type belonging to the user will be moved to Trash when then user is deleted. If false, posts of this type belonging to the user will *not* be trashed or deleted. If not set (the default), posts are trashed if post_type_supports('author'). Otherwise posts are not trashed or deleted. Default null.",
          "type": "boolean",
          "default": null
        }
      }
    },
    {
      "label": "Relations",
      "expandable": true,
      "schema": {
        "taxonomies": {
          "description": "(array) An array of taxonomy identifiers that will be registered for the post type. Taxonomies can be registered later with register_taxonomy() or register_taxonomy_for_object_type().",
          "label": "Taxonomies",
          "type": "type[]",
          "typeRelation": "taxonomy",
          "placeholder": "category, post_tag"
        },
        "@fields": {
          "label": "Field Groups",
          "description": "(array) An array of custom fields to attach to this custom post type.",
          "type": "repeater",
          "repeater": "fields",
          "force": {
            "object_type": [
              "!this"
            ]
          },
          "columns": [
            {
              "label": "ID",
              "key": "key",
              "type": "key"
            }
          ]
        },
        "@taxonomies": {
          "label": "Taxonomies",
          "description": "(array) An array of taxonomies to attach to this custom post type.",
          "type": "repeater",
          "repeater": "taxonomies",
          "force": {
            "object_type": [
              "!this"
            ]
          },
          "columns": [
            {
              "label": "ID",
              "key": "key",
              "type": "key"
            }
          ]
        }
      }
    }
  ],
  "table": {
    "columns": [
      {
        "label": "ID/Name",
        "key": "label",
        "type": "key"
      },
      {
        "label": "Description",
        "key": "description",
        "type": "description"
      },
      {
        "label": "Hierarchical",
        "key": "hierarchical",
        "type": "boolean"
      }
    ]
  }
}
